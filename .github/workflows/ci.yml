name: CI Workflow

on:
  push:
    branches: [master, ci]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.27
        env:
          MYSQL_DATABASE: ${{secrets.TEST_DATABASE_DATABASE}}
          MYSQL_ROOT_PASSWORD: ${{secrets.TEST_DATABASE_PASSWORD}}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Using Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4.0.1
        with:
          node-version: ${{matrix.node-version}}
      - name: Start Mysql Service
        run: sudo /etc/init.d/mysql start
      - name: Install npm dependencies
        run: npm ci
      - name: Lint the code
        run: npm run lint
      - name: Transfer .env.test file
        run: |
          echo "DATABASE_TYPE=${{secrets.TEST_DATABASE_TYPE}}" >> .env.test
          echo "DATABASE_PORT=${{secrets.TEST_DATABASE_PORT}}" >> .env.test
          echo "DATABASE_HOST=${{secrets.TEST_DATABASE_HOST}}" >> .env.test
          echo "DATABASE_USERNAME=${{secrets.TEST_DATABASE_USERNAME}}" >> .env.test
          echo "DATABASE_PASSWORD=${{secrets.TEST_DATABASE_PASSWORD}}" >> .env.test
          echo "DATABASE_DATABASE=${{secrets.TEST_DATABASE_DATABASE}}" >> .env.test
          echo "JWT_SECRET=${{secrets.TEST_JWT_SECRET}}" >> .env.test
      - name: Run the test
        run: npm run test
        
      