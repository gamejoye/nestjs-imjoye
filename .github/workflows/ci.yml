name: CI Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
permissions:
  contents: write
jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.27
        env:
          MYSQL_DATABASE: imjoye
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:7.2.4
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Using Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4.0.1
        with:
          node-version: ${{matrix.node-version}}
      - name: Install npm dependencies
        run: npm ci
      - name: Lint the code
        run: npm run lint
      - name: Transfer .env.test file
        run: |
          echo "DATABASE_TYPE=mysql" >> .env.test
          echo "DATABASE_PORT=3306" >> .env.test
          echo "DATABASE_HOST=127.0.0.1" >> .env.test
          echo "DATABASE_USERNAME=root" >> .env.test
          echo "DATABASE_PASSWORD=root" >> .env.test
          echo "DATABASE_DATABASE=imjoye" >> .env.test
          echo "REDIS_HOST=127.0.0.1"
          echo "REDIS_PORT=6379"
          echo "REDIS_DB=0"
          echo "JWT_SECRET=cF6qn3LvaZAcLE8veLVpdGO_t4COnVWM" >> .env.test
          echo "PASS=abcdefghijklmnop >> .env.test"
      - name: Run the test
        run: npm run test
      - name: Run e2e test
        run: npm run test:e2e
  publish-sdk:
    needs: ci
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.27
        env:
          MYSQL_DATABASE: imjoye
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:7.2.4
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Using Node.js ${{matrix.node-version}}
      uses: actions/setup-node@v4.0.1
      with:
        node-version: ${{matrix.node-version}}
    - name: Install npm dependencies
      run: npm ci
    - name: Transfer .env.test file
      run: |
        echo "DATABASE_TYPE=mysql" >> .env.test
          echo "DATABASE_PORT=3306" >> .env.test
          echo "DATABASE_HOST=127.0.0.1" >> .env.test
          echo "DATABASE_USERNAME=root" >> .env.test
          echo "DATABASE_PASSWORD=root" >> .env.test
          echo "DATABASE_DATABASE=imjoye" >> .env.test
          echo "REDIS_HOST=127.0.0.1"
          echo "REDIS_PORT=6379"
          echo "REDIS_DB=0"
          echo "JWT_SECRET=cF6qn3LvaZAcLE8veLVpdGO_t4COnVWM" >> .env.test
          echo "PASS=abcdefghijklmnop >> .env.test"
    - name: Build
      run: npm run build
    - name: Generate OpenApi
      run: npm run generate:openapi
    - name: Set up Git
      run: |
        git config --global user.name 'gamejoye'
        git config --global user.email 'gamejoye@gmail.com'
    - name: Pull Sdk
      run: git pull
    - name: Add and Commit Sdk
      id: commit_sdk
      run: |
        git add ./sdk
        git commit -m "chore(sdk): sdk"
      continue-on-error: true
    - name: Check Status
      run: git status
    - name: Dispatch "sdk-update" Event if Changes Committed
      if: steps.commit_sdk.outcome == 'success'
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.PAT }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/gamejoye/imjoye/dispatches" \
          -d '{"event_type": "sdk-update"}'
      env:
        PAT: ${{ secrets.PAT }}
    - name: Push Sdk
      run: git push
        
      