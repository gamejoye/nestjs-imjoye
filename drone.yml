kind: pipeline
type: docker
name: test
steps:
  - name: install
    image: node:20
    commands:
      - npm ci

  - name: lint
    image: node:20
    commands:
      - npm run lint

  - name: transfer .env.test file
    image: alpine/git
    environment:
      DATABASE_TYPE: mysql
      DATABASE_PORT: 3306
      DATABASE_HOST: database
      DATABASE_USERNAME: root
      DATABASE_PASSWORD:
        from_secret: database_password
      DATABASE_DATABASE:
        from_secret: database_database
      JWT_SECRET:
        from_secret: jwt_secret
    commands:
      - echo "DATABASE_TYPE=$DATABASE_TYPE" >> .env.test
      - echo "DATABASE_PORT=$DATABASE_PORT" >> .env.test
      - echo "DATABASE_HOST=$DATABASE_HOST" >> .env.test
      - echo "DATABASE_USERNAME=$DATABASE_USERNAME" >> .env.test
      - echo "DATABASE_PASSWORD=$DATABASE_PASSWORD" >> .env.test
      - echo "DATABASE_DATABASE=$DATABASE_DATABASE" >> .env.test
      - echo "JWT_SECRET=$JWT_SECRET" >> .env.test

  - name: run test
    image: node:20
    commands:
      - npm test

  - name: run e2e test
    image: node:20
    commands:
      - npm run test:e2e

  - name: Generate OpenApi
    image: node:20
    commands: 
      - npm run build
      - npm run generate:openapi
  
  - name: Push Sdk
    failure: ignore
    image: alpine/git
    commands:
      - git config --global user.name 'gamejoye'
      - git config --global user.email 'gamejoye@gmail.com'
      - git add ./sdk
      - git commit -m 'chore(sdk):sdk'
      - git push

services:
- name: database
  image: mysql:8.0.27
  environment:
    MYSQL_ROOT_PASSWORD: 
      from_secret: database_password
    MYSQL_DATABASE:
      from_secret: database_database