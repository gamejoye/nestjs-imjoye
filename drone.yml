kind: pipeline
type: docker
name: test
steps:
  - name: install
    image: node
    commands:
      - npm ci

  - name: lint
    image: node:20
    commands:
      - npm run lint

  - name: transfer .env.test file
    image: alpine/git
    environment:
      DATABASE_TYPE:
        from_secret: database_type
      DATABASE_PORT:
        from_secret: database_port
      DATABASE_HOST:
        from_secret: database_host
      DATABASE_USERNAME:
        from_secret: database_username
      DATABASE_PASSWORD:
        from_secret: database_password
      DATABASE_DATABASE:
        from_secret: database_database
      JWT_SECRET:
        from_secret: jwt_secret
    commands:
      - echo "DATABASE_TYPE=$DATABASE_TYPE" >> .env.test
      - echo "DATABASE_PORT=$DATABASE_PORT" >> .env.test
      - echo "DATABASE_HOST=$DATABASE_HOST" >> .env.test
      - echo "DATABASE_USERNAME=$DATABASE_USERNAME" >> .env.test
      - echo "DATABASE_PASSWORD=$DATABASE_PASSWORD" >> .env.test
      - echo "DATABASE_DATABASE=$DATABASE_DATABASE" >> .env.test
      - echo "JWT_SECRET=$JWT_SECRET" >> .env.test

  - name: run test
    image: node
    commands:
      - npm test

  - name: run e2e test
    image: node
    commands:
      - npm run test:e2e

services:
- name: database
  image: mysql:8.27
  environment:
    MYSQL_USERNAME: 
      from_secret: database_username
    MYSQL_PASSWORD: 
      from_secret: database_password
    MYSQL_DATABASE:
      from_secret: database_database
    MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
  commands:
    - sleep 15